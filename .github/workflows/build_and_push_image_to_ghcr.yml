name: Build and Push Docker Image
description: Build and push Docker image to GitHub Container Registry (ghcr.io)

on:
  workflow_call:
    inputs:
      from_image_name:
        description: "Base image name to use for the build (e.g., python)"
        required: true
        type: string
      from_image_tag:
        description: "Base image tag to use for the build (e.g., 3.12.2-slim)"
        required: true
        type: string
      image_name:
        description: "Name of the image to build (e.g., python-base)"
        required: true
        type: string
      image_tag:
        description: "Image tag to use for the build (e.g., 3.12)"
        required: true
        type: string


jobs:

  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}
          tags: |
            type=raw,value=${{ inputs.image_tag }}

      - name: Build local image to test
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          build-args: |
            FROM_IMAGE_NAME=${{ inputs.from_image_name }}
            FROM_IMAGE_TAG=${{ inputs.from_image_tag }}
          tags: local/image

      - name: Test
        run: |
          docker run --rm \
            -v $(pwd)/:/home/user/build/ \
            -e IMAGE_TAG=${{ inputs.image_tag }} \
            local/image bash \
            -c "cd build && ./scripts/test.sh"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch multi-platform version SHAs
        id: multi-arch-digests
        run: |
          manifests_shas=$(docker manifest inspect ghcr.io/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.image_tag }} }} \
                              | jq -r '.manifests[] | .digest' | paste -s -d ', ' -)
          echo $manifests_shas
          echo "multi-arch-digests=$manifests_shas" >> $GITHUB_OUTPUT

      - name: Delete old image @ghcr.io
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          package: "${{ inputs.image_name }}"
          delete-tags: "${{ inputs.image_tag }}"

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FROM_IMAGE_NAME=${{ inputs.from_image_name }}
            FROM_IMAGE_TAG=${{ inputs.from_image_tag }}

